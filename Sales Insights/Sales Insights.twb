<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook original-version='18.1' source-build='2021.1.2 (20211.21.0511.0935)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelRelationshipPerfOptions.true...ObjectModelRelationshipPerfOptions />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='sales' inline='true' name='federated.149iayg0tbuka31h699ry1rl2udc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z' name='customers' table='[customers]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z' name='date' table='[date]' type='table' />
          <relation connection='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z' name='products' table='[products]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cost_price]' value='[transactions].[cost_price]' />
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[profit]' value='[transactions].[profit]' />
          <map key='[profit_margin]' value='[transactions].[profit_margin]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_995DA29A0B9642C5A0E8E7B99641C31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_995DA29A0B9642C5A0E8E7B99641C31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_995DA29A0B9642C5A0E8E7B99641C31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_995DA29A0B9642C5A0E8E7B99641C31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_995DA29A0B9642C5A0E8E7B99641C31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_995DA29A0B9642C5A0E8E7B99641C31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_995DA29A0B9642C5A0E8E7B99641C31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin</remote-name>
            <remote-type>4</remote-type>
            <local-name>[profit_margin]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_995DA29A0B9642C5A0E8E7B99641C31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit</remote-name>
            <remote-type>4</remote-type>
            <local-name>[profit]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_995DA29A0B9642C5A0E8E7B99641C31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_price]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>cost_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_995DA29A0B9642C5A0E8E7B99641C31E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_1CB62C6F0F664B838596593FFB323DDB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_1CB62C6F0F664B838596593FFB323DDB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_1CB62C6F0F664B838596593FFB323DDB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_27635423BF0540768AAE24B11DCB7532]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_27635423BF0540768AAE24B11DCB7532]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_27635423BF0540768AAE24B11DCB7532]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_27635423BF0540768AAE24B11DCB7532]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_27635423BF0540768AAE24B11DCB7532]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_02967623B9584246AB890BF93F174E08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_02967623B9584246AB890BF93F174E08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_02967623B9584246AB890BF93F174E08]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products_0563E4148534492888C2D43306C0C031]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products_0563E4148534492888C2D43306C0C031]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit margin %' datatype='real' name='[Calculation_518758382390587392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([profit])/SUM([Calculation_589690076254040064])' />
      </column>
      <column caption='Normalized Amount' datatype='real' name='[Calculation_589690076254040064]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74.5 ELSE [sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;  &quot;' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_1CB62C6F0F664B838596593FFB323DDB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_27635423BF0540768AAE24B11DCB7532]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_02967623B9584246AB890BF93F174E08]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_0563E4148534492888C2D43306C0C031]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_995DA29A0B9642C5A0E8E7B99641C31E]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_589690076254040064]' derivation='Sum' name='[pcto:sum:Calculation_589690076254040064:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_589690076254040064]' derivation='Sum' name='[sum:Calculation_589690076254040064:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_518758382390587392]' derivation='User' name='[usr:Calculation_518758382390587392:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Custmer Name)' hidden='true' name='[Action (Custmer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[custmer_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Code)' hidden='true' name='[Action (Product Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[product_code]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Cy Date))' hidden='true' name='[Action (QUARTER(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tqr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Cy Date),MONTH(Cy Date))' hidden='true' name='[Action (YEAR(Cy Date),MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:customer_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Brick &amp; Mortar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E-Commerce&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#e15759'>
              <bucket>&quot;[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.149iayg0tbuka31h699ry1rl2udc].[pcto:sum:Calculation_589690076254040064:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_589690076254040064' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter from='&quot;Mark001&quot;' function='range' level='[markets_code]' to='&quot;Mark015&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='customers' id='customers_1CB62C6F0F664B838596593FFB323DDB'>
            <properties context=''>
              <relation connection='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_27635423BF0540768AAE24B11DCB7532'>
            <properties context=''>
              <relation connection='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_02967623B9584246AB890BF93F174E08'>
            <properties context=''>
              <relation connection='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_0563E4148534492888C2D43306C0C031'>
            <properties context=''>
              <relation connection='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_995DA29A0B9642C5A0E8E7B99641C31E'>
            <properties context=''>
              <relation connection='mysql.1sxvopv0ieb4zo13r5pab1gjmv2z' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_995DA29A0B9642C5A0E8E7B99641C31E' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='customers_1CB62C6F0F664B838596593FFB323DDB' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_995DA29A0B9642C5A0E8E7B99641C31E' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='date_27635423BF0540768AAE24B11DCB7532' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_995DA29A0B9642C5A0E8E7B99641C31E' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='markets_02967623B9584246AB890BF93F174E08' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_995DA29A0B9642C5A0E8E7B99641C31E' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='products_0563E4148534492888C2D43306C0C031' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 5 (generated) 1' name='[Action10_58F7FE20E5814808BC71802166CA84AB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 1 (generated) 1' name='[Action11_C718C4E666864D5EB395F7D6D88A72D4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated) 1' name='[Action12_F72D67F697394EDF9F499E08AFE48655]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 10 (generated)' name='[Action14_B0EC4BDE4F1640CAA5343DF03FBC6059]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Profit by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 3 (generated) 1' name='[Action14_C0E812AE59AD4180BF5BA0DD26732C0D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Revenue By Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action16_27E3774120514F07B8FD6E1EACC8BD2D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Profit Trend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action16_4B37E16FA9DB4729AD6D2E10BA7237B3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Customer Table' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1_1ADF6BDD989046E1B33FAE3B865F1E85]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_ADAE8FC00F41490E9D6764A88251DF8E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_A6B9B6A7B88841B4B8CE1777D077D0D2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue' type='sheet' worksheet='Revenue By Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_FC54AF56CA25461390FEC7EE06308D3B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue' type='sheet' worksheet='Sales Quantity By Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_2584E2399684447A993E549DF722ACF4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_9F76E06754BC4ECF896D5CE6B8601A56]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_CD481913046C4428BD9697E3152ACD9B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue' type='sheet' worksheet='Revenue By Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_2B91487DDCD846F080249FBC32A7C305]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue' type='sheet' worksheet='Top 5 customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_BE631029AD7E470D9B6566BA2DCEB975]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue' type='sheet' worksheet='Top 5 Products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Profit margin %' datatype='real' name='[Calculation_518758382390587392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit])/SUM([Calculation_589690076254040064])' />
            </column>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_589690076254040064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74.5 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_589690076254040064]' derivation='Sum' name='[sum:Calculation_589690076254040064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit]' derivation='Sum' name='[sum:profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_518758382390587392]' derivation='User' name='[usr:Calculation_518758382390587392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.149iayg0tbuka31h699ry1rl2udc].[sum:profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.149iayg0tbuka31h699ry1rl2udc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]&quot;</bucket>
              <bucket>&quot;[federated.149iayg0tbuka31h699ry1rl2udc].[sum:profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_F72D67F697394EDF9F499E08AFE48655]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_C718C4E666864D5EB395F7D6D88A72D4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_B0EC4BDE4F1640CAA5343DF03FBC6059]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_A2B33B3B619C4CEC86E517F742FF05F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.149iayg0tbuka31h699ry1rl2udc].[none:custmer_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[:Measure Names]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]' value='p0.00%' />
            <format attr='width' field='[federated.149iayg0tbuka31h699ry1rl2udc].[:Measure Names]' value='117' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.149iayg0tbuka31h699ry1rl2udc].[:Measure Names]' value='24' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.149iayg0tbuka31h699ry1rl2udc].[none:custmer_name:nk]</rows>
        <cols>[federated.149iayg0tbuka31h699ry1rl2udc].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8E893C6A-1DB6-492C-A371-9D05CD5A7759}' />
    </worksheet>
    <worksheet name='Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_589690076279742465]' derivation='None' name='[none:Calculation_589690076279742465:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1ADF6BDD989046E1B33FAE3B865F1E85]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action16_4B37E16FA9DB4729AD6D2E10BA7237B3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[custmer_name]' member='&quot;Acclaimed Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;All-Out&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Atlas Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Control&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsara Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsbea Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslance Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslytical&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsocity&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsopedia Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsquipo Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Elite&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Epic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Excel Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Expression&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Flawless Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Forward Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Info Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Insight&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Integration Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Leader&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Logic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Modular&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nixon&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nomad Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Novus&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Path&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Power&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Premium Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Propel&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Relief&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sage&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sound&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surface Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surge Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Synthetic&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Unity Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Zone&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action3_A6B9B6A7B88841B4B8CE1777D077D0D2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action9_BE631029AD7E470D9B6566BA2DCEB975]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_A2B33B3B619C4CEC86E517F742FF05F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[mn:cy_date:ok]' value='iLLL' />
            <format attr='color' field='[federated.149iayg0tbuka31h699ry1rl2udc].[mn:cy_date:ok]' value='#9d7660' />
            <format attr='font-weight' field='[federated.149iayg0tbuka31h699ry1rl2udc].[mn:cy_date:ok]' value='bold' />
            <format attr='font-size' field='[federated.149iayg0tbuka31h699ry1rl2udc].[mn:cy_date:ok]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[none:Calculation_589690076279742465:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.149iayg0tbuka31h699ry1rl2udc].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{C10C5D88-D1D2-4330-8EA4-3960FB62CDBD}' />
    </worksheet>
    <worksheet name='Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_589690076254040064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74.5 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_589690076254040064]' derivation='Sum' name='[pcto:sum:Calculation_589690076254040064:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_589690076254040064]' derivation='Sum' name='[sum:Calculation_589690076254040064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_F72D67F697394EDF9F499E08AFE48655]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_C718C4E666864D5EB395F7D6D88A72D4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action16_4B37E16FA9DB4729AD6D2E10BA7237B3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[custmer_name]' member='&quot;Acclaimed Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;All-Out&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Atlas Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Control&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsara Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsbea Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslance Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslytical&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsocity&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsopedia Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsquipo Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Elite&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Epic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Excel Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Expression&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Flawless Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Forward Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Info Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Insight&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Integration Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Leader&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Logic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Modular&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nixon&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nomad Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Novus&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Path&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Power&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Premium Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Propel&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Relief&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sage&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sound&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surface Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surge Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Synthetic&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Unity Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Zone&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_B0EC4BDE4F1640CAA5343DF03FBC6059]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_A2B33B3B619C4CEC86E517F742FF05F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='208' />
            <format attr='cell-h' value='208' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.149iayg0tbuka31h699ry1rl2udc].[none:customer_type:nk]' />
              <wedge-size column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' />
              <size column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' />
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[none:customer_type:nk]' />
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[pcto:sum:Calculation_589690076254040064:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='11' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DDDE5D3C-5066-485D-B4E2-627804A768D4}' />
    </worksheet>
    <worksheet name='Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column-instance column='[profit]' derivation='Sum' name='[sum:profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_F72D67F697394EDF9F499E08AFE48655]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_C718C4E666864D5EB395F7D6D88A72D4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action16_4B37E16FA9DB4729AD6D2E10BA7237B3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[custmer_name]' member='&quot;Acclaimed Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;All-Out&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Atlas Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Control&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsara Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsbea Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslance Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslytical&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsocity&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsopedia Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsquipo Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Elite&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Epic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Excel Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Expression&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Flawless Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Forward Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Info Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Insight&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Integration Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Leader&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Logic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Modular&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nixon&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nomad Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Novus&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Path&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Power&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Premium Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Propel&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Relief&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sage&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sound&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surface Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surge Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Synthetic&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Unity Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Zone&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_B0EC4BDE4F1640CAA5343DF03FBC6059]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_A2B33B3B619C4CEC86E517F742FF05F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:profit:qk]' value='center' />
            <format attr='color' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:profit:qk]' value='#499894' />
            <format attr='font-weight' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:profit:qk]' value='bold' />
            <format attr='font-size' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:profit:qk]' value='10' />
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:profit:qk]' value='c&quot; &quot;#,##0,,.00M;&quot; &quot;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:profit:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='16'>Profit</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16'><![CDATA[<[federated.149iayg0tbuka31h699ry1rl2udc].[sum:profit:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C2C340A6-07AC-453F-A694-37BF179F3A3A}' />
    </worksheet>
    <worksheet name='Profit Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Profit margin %' datatype='real' name='[Calculation_518758382390587392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit])/SUM([Calculation_589690076254040064])' />
            </column>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_589690076254040064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74.5 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_589690076254040064]' derivation='Sum' name='[sum:Calculation_589690076254040064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_518758382390587392]' derivation='User' name='[usr:Calculation_518758382390587392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_C718C4E666864D5EB395F7D6D88A72D4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='65' />
            <format attr='width' field='[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]' value='65' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='c#,##0,,.00M' />
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.149iayg0tbuka31h699ry1rl2udc].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' />
              <color column='[federated.149iayg0tbuka31h699ry1rl2udc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]' />
              <color column='[federated.149iayg0tbuka31h699ry1rl2udc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk] + [federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk])</rows>
        <cols>[federated.149iayg0tbuka31h699ry1rl2udc].[tqr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{C5B75F1C-4F1B-454C-AE40-3847D4639B84}' />
    </worksheet>
    <worksheet name='Profit by Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Profit margin %' datatype='real' name='[Calculation_518758382390587392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit])/SUM([Calculation_589690076254040064])' />
            </column>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_589690076254040064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74.5 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_518758382390587392]' derivation='User' name='[usr:Calculation_518758382390587392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_F72D67F697394EDF9F499E08AFE48655]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1ADF6BDD989046E1B33FAE3B865F1E85]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action16_4B37E16FA9DB4729AD6D2E10BA7237B3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[custmer_name]' member='&quot;Acclaimed Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;All-Out&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Atlas Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Control&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsara Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsbea Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslance Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslytical&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsocity&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsopedia Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsquipo Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Elite&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Epic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Excel Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Expression&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Flawless Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Forward Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Info Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Insight&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Integration Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Leader&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Logic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Modular&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nixon&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nomad Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Novus&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Path&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Power&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Premium Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Propel&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Relief&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sage&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sound&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surface Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surge Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Synthetic&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Unity Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Zone&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action9_BE631029AD7E470D9B6566BA2DCEB975]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_A2B33B3B619C4CEC86E517F742FF05F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='color' field='[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]' value='#000000' />
            <format attr='text-align' field='[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]' value='center' />
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]' value='112' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]</rows>
        <cols>[federated.149iayg0tbuka31h699ry1rl2udc].[usr:Calculation_518758382390587392:qk]</cols>
      </table>
      <simple-id uuid='{375C2FBF-DA8D-4CEA-A4A8-BFB964B7BD4A}' />
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1ADF6BDD989046E1B33FAE3B865F1E85]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action3_A6B9B6A7B88841B4B8CE1777D077D0D2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action9_BE631029AD7E470D9B6566BA2DCEB975]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:sales_qty:qk]' value='c#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#499894' fontsize='16'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#499894' fontsize='16'><![CDATA[<[federated.149iayg0tbuka31h699ry1rl2udc].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{08890CD7-3633-441D-B553-203CD3B83104}' />
    </worksheet>
    <worksheet name='Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_589690076254040064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74.5 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_589690076254040064]' derivation='Sum' name='[sum:Calculation_589690076254040064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_F72D67F697394EDF9F499E08AFE48655]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1ADF6BDD989046E1B33FAE3B865F1E85]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action16_4B37E16FA9DB4729AD6D2E10BA7237B3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[custmer_name]' member='&quot;Acclaimed Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;All-Out&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Atlas Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Control&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsara Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsbea Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslance Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslytical&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsocity&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsopedia Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsquipo Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Elite&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Epic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Excel Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Expression&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Flawless Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Forward Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Info Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Insight&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Integration Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Leader&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Logic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Modular&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nixon&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nomad Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Novus&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Path&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Power&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Premium Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Propel&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Relief&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sage&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sound&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surface Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surge Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Synthetic&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Unity Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Zone&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action3_A6B9B6A7B88841B4B8CE1777D077D0D2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action9_BE631029AD7E470D9B6566BA2DCEB975]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_A2B33B3B619C4CEC86E517F742FF05F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='c#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#499894' fontsize='16'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#499894' fontsize='16'><![CDATA[<[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5550E424-79FB-47DE-86F4-BFC17092C5E6}' />
    </worksheet>
    <worksheet name='Revenue By Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_589690076254040064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74.5 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_589690076254040064]' derivation='Sum' name='[sum:Calculation_589690076254040064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_F72D67F697394EDF9F499E08AFE48655]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1ADF6BDD989046E1B33FAE3B865F1E85]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action16_4B37E16FA9DB4729AD6D2E10BA7237B3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[custmer_name]' member='&quot;Acclaimed Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;All-Out&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Atlas Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Control&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsara Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsbea Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslance Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslytical&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsocity&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsopedia Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsquipo Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Elite&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Epic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Excel Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Expression&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Flawless Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Forward Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Info Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Insight&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Integration Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Leader&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Logic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Modular&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nixon&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nomad Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Novus&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Path&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Power&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Premium Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Propel&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Relief&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sage&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sound&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surface Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surge Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Synthetic&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Unity Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Zone&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_B0EC4BDE4F1640CAA5343DF03FBC6059]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action9_BE631029AD7E470D9B6566BA2DCEB975]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_A2B33B3B619C4CEC86E517F742FF05F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='c#,##0,,.00M' />
            <format attr='text-align' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]' value='112' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#b6992d' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]</rows>
        <cols>[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]</cols>
      </table>
      <simple-id uuid='{8B44B083-D526-481A-B023-A9E9E527E08A}' />
    </worksheet>
    <worksheet name='Revenue By Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_589690076254040064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74.5 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_589690076254040064]' derivation='Sum' name='[sum:Calculation_589690076254040064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1ADF6BDD989046E1B33FAE3B865F1E85]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action3_A6B9B6A7B88841B4B8CE1777D077D0D2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action9_BE631029AD7E470D9B6566BA2DCEB975]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' />
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]</rows>
        <cols>([federated.149iayg0tbuka31h699ry1rl2udc].[yr:cy_date:ok] / [federated.149iayg0tbuka31h699ry1rl2udc].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{BAD09ECC-3CAC-4DA3-8944-F695381BFB59}' />
    </worksheet>
    <worksheet name='Sales Quantity By Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1ADF6BDD989046E1B33FAE3B865F1E85]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action3_A6B9B6A7B88841B4B8CE1777D077D0D2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action9_BE631029AD7E470D9B6566BA2DCEB975]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:sales_qty:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:sales_qty:qk]' value='c#,##0,.00K' />
            <format attr='text-align' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:sales_qty:qk]' value='center' />
            <format attr='font-weight' data-class='subtotal' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:sales_qty:qk]' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]' value='116' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]</rows>
        <cols>[federated.149iayg0tbuka31h699ry1rl2udc].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{27CC53AE-C433-4DAD-BA24-AAD186A7F5B7}' />
    </worksheet>
    <worksheet name='Top 5 Products'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_589690076254040064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74.5 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[product_code]' derivation='None' name='[none:product_code:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_589690076254040064]' derivation='Sum' name='[sum:Calculation_589690076254040064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1ADF6BDD989046E1B33FAE3B865F1E85]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action3_A6B9B6A7B88841B4B8CE1777D077D0D2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[none:product_code:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_589690076254040064])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.149iayg0tbuka31h699ry1rl2udc].[none:product_code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[none:product_code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' scope='cols' value='Normalized Amount' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='c#,##0,,.00M' />
            <format attr='color' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='#ffffff' />
            <format attr='font-weight' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='bold' />
            <format attr='font-size' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='10' />
            <format attr='text-align' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.149iayg0tbuka31h699ry1rl2udc].[none:product_code:nk]' value='76' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='298' />
                <format attr='maxwidth' value='298' />
                <format attr='minheight' value='150' />
                <format attr='maxheight' value='150' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.149iayg0tbuka31h699ry1rl2udc].[none:product_code:nk]</rows>
        <cols>[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]</cols>
      </table>
      <simple-id uuid='{822FA015-7650-4AE5-8E4D-94BA1499CF30}' />
    </worksheet>
    <worksheet name='Top 5 customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_589690076254040064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*74.5 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_589690076254040064]' derivation='Sum' name='[sum:Calculation_589690076254040064:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1ADF6BDD989046E1B33FAE3B865F1E85]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action3_A6B9B6A7B88841B4B8CE1777D077D0D2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_589690076254040064])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.149iayg0tbuka31h699ry1rl2udc].[none:custmer_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[none:custmer_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' scope='cols' value='Normalized Amount' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='c#,##0,,.00M' />
            <format attr='text-align' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='center' />
            <format attr='font-weight' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='bold' />
            <format attr='color' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='#1b1b1b' />
            <format attr='font-size' field='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' value='9' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.149iayg0tbuka31h699ry1rl2udc].[none:custmer_name:nk]' value='140' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3843094110488892' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.149iayg0tbuka31h699ry1rl2udc].[none:custmer_name:nk]</rows>
        <cols>[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]</cols>
      </table>
      <simple-id uuid='{C4382B49-DE1D-454C-A28D-6D59425EE533}' />
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='sales' name='federated.149iayg0tbuka31h699ry1rl2udc' />
          </datasources>
          <datasource-dependencies datasource='federated.149iayg0tbuka31h699ry1rl2udc'>
            <column caption='Blank' datatype='string' name='[Calculation_589690076279742465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;  &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_589690076279742465]' derivation='None' name='[none:Calculation_589690076279742465:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_F72D67F697394EDF9F499E08AFE48655]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_589690076279742465]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action16_4B37E16FA9DB4729AD6D2E10BA7237B3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[custmer_name]' member='&quot;Acclaimed Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;All-Out&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Atlas Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Control&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsara Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsbea Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslance Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalslytical&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsocity&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsopedia Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Electricalsquipo Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Elite&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Epic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Excel Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Expression&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Flawless Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Forward Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Info Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Insight&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Integration Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Leader&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Logic Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Modular&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nixon&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Nomad Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Novus&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Path&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Power&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Premium Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Propel&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Relief&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sage&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Sound&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surface Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Surge Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Synthetic&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Unity Stores&quot;' />
              <groupfilter function='member' level='[custmer_name]' member='&quot;Zone&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action3_A6B9B6A7B88841B4B8CE1777D077D0D2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action9_BE631029AD7E470D9B6566BA2DCEB975]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_A2B33B3B619C4CEC86E517F742FF05F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Product Code)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Markets Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (Custmer Name)]</column>
            <column>[federated.149iayg0tbuka31h699ry1rl2udc].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.149iayg0tbuka31h699ry1rl2udc].[yr:cy_date:ok]' value='#9d7660' />
            <format attr='font-weight' field='[federated.149iayg0tbuka31h699ry1rl2udc].[yr:cy_date:ok]' value='bold' />
            <format attr='font-size' field='[federated.149iayg0tbuka31h699ry1rl2udc].[yr:cy_date:ok]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.149iayg0tbuka31h699ry1rl2udc].[none:Calculation_589690076279742465:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.149iayg0tbuka31h699ry1rl2udc].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{17FE1309-3D69-43BE-B5E2-66F720E3327A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard-Profit Analysis'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='4000' id='3' name='Year' show-title='false' w='16313' x='38063' y='3778' />
        <zone h='5889' id='6' name='Month' show-title='false' w='46625' x='25875' y='9111' />
        <zone h='9111' id='7' name='Revenue' show-title='false' w='13188' x='2688' y='17444' />
        <zone h='66000' id='8' name='Revenue By Markets' w='20250' x='1000' y='27778' />
        <zone h='66778' id='23' name='Profit by Markets' w='21438' x='21938' y='27889' />
        <zone h='9000' id='24' name='Profit' show-title='false' w='9875' x='27063' y='16889' />
        <zone h='40778' id='26' name='Customer Table' show-title='false' w='34438' x='46688' y='55667' />
        <zone h='38889' id='27' name='Pie Chart' show-title='false' w='17625' x='82250' y='55444' />
        <zone h='37111' id='36' name='Profit Trend' show-title='false' w='54625' x='44750' y='16333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='40' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='39' param='vert' w='99000' x='500' y='889'>
                <zone fixed-size='36' h='4000' id='3' is-fixed='true' name='Year' show-title='false' w='16313' x='38063' y='3778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='53' h='5889' id='6' is-fixed='true' name='Month' show-title='false' w='46625' x='25875' y='9111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37111' id='36' is-fixed='true' name='Profit Trend' show-title='false' w='54625' x='44750' y='16333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='9000' id='24' is-fixed='true' name='Profit' show-title='false' w='9875' x='27063' y='16889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='82' h='9111' id='7' is-fixed='true' name='Revenue' show-title='false' w='13188' x='2688' y='17444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66000' id='8' is-fixed='true' name='Revenue By Markets' w='20250' x='1000' y='27778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66778' id='23' is-fixed='true' name='Profit by Markets' w='21438' x='21938' y='27889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38889' id='27' is-fixed='true' name='Pie Chart' show-title='false' w='17625' x='82250' y='55444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40778' id='26' is-fixed='true' name='Customer Table' show-title='false' w='34438' x='46688' y='55667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{312EFAC1-DC23-42D3-9C0C-206E600095E9}' />
    </dashboard>
    <dashboard name='Dashboard-Revenue'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='4000' id='3' name='Year' show-title='false' w='16313' x='38063' y='3778' />
        <zone h='5889' id='6' name='Month' show-title='false' w='46625' x='25875' y='9111' />
        <zone h='9111' id='7' name='Revenue' show-title='false' w='13188' x='2688' y='17444' />
        <zone h='66000' id='8' name='Revenue By Markets' w='23250' x='1000' y='27778' />
        <zone h='9333' id='9' name='Quantity' show-title='false' w='13125' x='29563' y='17444' />
        <zone h='65778' id='10' name='Sales Quantity By Markets' w='22313' x='25063' y='27778' />
        <zone h='48222' id='11' name='Revenue By Year' w='49938' x='49125' y='16333' />
        <zone h='30000' id='13' name='Top 5 customers' w='25125' x='48688' y='65667' />
        <zone h='33778' id='14' name='Top 5 Products' w='24625' x='74688' y='65889' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='34' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='33' param='vert' w='99000' x='500' y='889'>
                <zone fixed-size='36' h='4000' id='3' is-fixed='true' name='Year' show-title='false' w='16313' x='38063' y='3778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='53' h='5889' id='6' is-fixed='true' name='Month' show-title='false' w='46625' x='25875' y='9111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48222' id='11' is-fixed='true' name='Revenue By Year' w='49938' x='49125' y='16333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='82' h='9111' id='7' is-fixed='true' name='Revenue' show-title='false' w='13188' x='2688' y='17444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='84' h='9333' id='9' is-fixed='true' name='Quantity' show-title='false' w='13125' x='29563' y='17444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66000' id='8' is-fixed='true' name='Revenue By Markets' w='23250' x='1000' y='27778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65778' id='10' is-fixed='true' name='Sales Quantity By Markets' w='22313' x='25063' y='27778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='30000' id='13' is-fixed='true' name='Top 5 customers' w='25125' x='48688' y='65667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33778' id='14' is-fixed='true' name='Top 5 Products' w='24625' x='74688' y='65889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7401122E-2504-45A4-92B0-B152F0369827}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A8ADA08-1BF6-492F-BE31-3DC690F96F00}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{418D474F-EFD2-4BB5-BCDD-F5C40A341E99}' />
    </window>
    <window class='worksheet' name='Revenue By Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02368D90-8AD3-4603-9E1F-E030C93DC995}' />
    </window>
    <window class='worksheet' name='Profit by Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80D59E8B-1F7F-4F45-9F5C-7D38A5AC5880}' />
    </window>
    <window class='worksheet' name='Sales Quantity By Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7541D80-86A1-4394-B37E-8290E3656348}' />
    </window>
    <window class='worksheet' name='Top 5 customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7DFEBACF-9717-4785-8844-F871792CC1BE}' />
    </window>
    <window class='worksheet' name='Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[none:product_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F1C3190-1CFA-42A2-832B-1EC43340F8EB}' />
    </window>
    <window class='worksheet' name='Revenue By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35A50119-756A-4A7A-BE89-679487E674E8}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[none:Calculation_589690076279742465:nk]</field>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0CB774ED-7744-46B6-83EF-BE1410515134}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[none:Calculation_589690076279742465:nk]</field>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F7C36DC-885A-48B6-BC5D-AF96FE721E8D}' />
    </window>
    <window class='dashboard' name='Dashboard-Revenue'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Markets' />
        <viewpoint name='Revenue By Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Quantity By Markets' />
        <viewpoint name='Top 5 Products' />
        <viewpoint name='Top 5 customers' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{1D1FC8B7-9901-4B1C-94B3-A2EE965DA552}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard-Profit Analysis'>
      <viewpoints>
        <viewpoint name='Customer Table' />
        <viewpoint name='Month' />
        <viewpoint name='Pie Chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.149iayg0tbuka31h699ry1rl2udc].[none:customer_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit' />
        <viewpoint name='Profit Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit by Markets' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Markets' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2B6C7F31-F897-45B1-9A65-DE6F7E986E17}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{91385CDF-A053-4115-BFE4-84D5ED37BE30}' />
    </window>
    <window class='worksheet' name='Customer Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86C300BF-4170-4F1C-BAF7-C21815C79480}' />
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='228'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.149iayg0tbuka31h699ry1rl2udc].[none:customer_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.149iayg0tbuka31h699ry1rl2udc].[sum:Calculation_589690076254040064:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[none:customer_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76451385-397C-48F7-A188-F9F0C7AB550C}' />
    </window>
    <window class='worksheet' name='Profit Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.149iayg0tbuka31h699ry1rl2udc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.149iayg0tbuka31h699ry1rl2udc].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE36F232-87A0-4D17-B6C8-1EF70E3CC468}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer Table' width='192'>
      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
      zGhFLAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard-Profit Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard-Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='29' name='Month' width='192'>
      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
      61sOMgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pie Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAASK0lEQVR4nO3deXCcd3nA8e+792p1y5Ksw7Jly5Jly5Zkx1fshMQhIYHQtLgDBbdlpmHK
      MHSAgXK1paVMB1LaGZgyHE0oEJoEEpKJkziBxhd2HNuJcXw7tk5LtmTd8kp7H++vfzhAwFlL
      Wu3q3dX7fP7yyLb07Gq/u+/vfd99V1NKKYQwKYvRAwhhJAlAmJoEIExNAhCmJgEIU5MAhKlJ
      AMLUJABhahKAMDUJQJiaBCBMTQIQpiYBCFOTAISpSQDC1CQAYWoSgDA1CUCYmgQgTE0CEKYm
      AQhTkwCEqUkAwtRsRg8gMpVC6TrEIxALoyI+VHgSFfaBHoV4lP5oIUOU4rBZsdssuB128jwO
      3A47VquG3WbFomlG35CbkgBMTil1/QHuGyA+0oY+3oM+3oPyXkb3j6CC4xCeBG68ftpe/+3s
      DNx+w9dtVgsel52CXBelhTmUF3lYWJzL4oWF1JQVkJfjwGa1oGVAHBKAySilowJjxAdOE+87
      gX71FPp49/UHeorE4jpefxivP0zvoPcP/k7ToCQ/hyULC2lcvIDGxQtYUlFEjtNmSBASwDSE
      ggH8gSBOt4fcHBcAAd8kymrH43YZPN3UVCxEfOAs8UuHiPUeQR9uu74ZY8QsCka8AUa8AX5z
      sR8At9NGQ80C1i6vYG39QipL8rBa52Z5qsm1Qaf26Pceoi/gZtNtd7BtYzO9547wgyf3cMum
      LWxds5gzXcNsXdfA8RNnsbo8eMe9bF6/ilNnL+LMyWV8bJJtd27m0P69rLzlNvyjfXgDUUrc
      0DMWo6Eqn7PdI7xry3osKXoSVLEw8b7jxNpeJnbpIMo3lJpv/DZPJ9gEmg0NWFRewOZV1Wxp
      WkR1WT5WS/pikFeAaVC6zrWxUWKhALte/CVDl7v45Gf/nqpCJw997Ws01JbxwvAVLvRcw9t/
      gfoKD4oQp7snGGo7RlWei2uj3YxGcjj6o5/iu3yG7R//NP/z4yfYvmMHDz/yCAVOKwU19ayt
      KUh+TqWjj3UTO/8c0bZfoSb6U3gvzA0F9A566R308tT+cyytKGLbulpuW11DvseZ8s0kCWAa
      LDY7DY3LKCkuwlNezJJiKz96+BE2bVqPVYvT0zfMipYaljeuwZsLK8oUk3HFiqYWirUJyu1h
      ok4XJw8fY8PmrZTm2WhpWMrOeJDevgGifi+D8WJyLHpS86lYhNilg0RPPUn8yuugx1N8DxhD
      KejsH6ezf5zHXj7NppXVvG9zPcuqilK2d0k2gaZhfGSAvoERissqqCwrAWCwrxfdkUuh28rA
      mI+aimJ8IUU8GsZpU+iaHWV1EA8HsKHjzC+i/1IHeQsqsehRioqK8HlHGfPHKCtw0dM3Ql3d
      Uqwz2AZSET/RCy8SPfEY+lhXum5+QunYBJqKRdNYvayMB7Y00Fy3ENss1woSQBZSkQDRc88S
      Of5j1OSAYXMYEcDbNSwq4YPbVtG6fGHS6wQJIIuoeITYhZcIH/0+aqLP6HEMD+C3Vi4pZce7
      V7OqtnTGawQJIEmHdz/Hrw6+xoZ3b2fg5G7aB0N86Z/+kaIcO76RS/zt5x/ix9/9Nz73ma9Q
      t24La2qLGA9aWVmdR97StVQXuaf9s5RSxC+/TvjQt9AHz6bxVs1MpgQA1zeNtqxexF/es4by
      Is+0Q5BFcJI23HEfwaCfiYmrTDoX8eD9+Rw+08v7NtTyzLO/Ys2aBvyjA4xHdBaULWDk2jhK
      hxPnBin2Kqru3DKtX5LuGyJ86NvELuwCldwi2Qx0pXjldC+/udDP9nc18sDWFTjs1in/n5wM
      l6SXn/kpVyKF3HnbBiaGrnDmQhfFBS4mRvs5d7GdQ3t3c6zDy1e/8mUuvvEq9917Hx53Dtg9
      BK8NMNVhKKXHiZ7bSeCx7cTefF4e/NMUjMR4bPcZvvjfe7jYO8JUGziyCZSkI3tf5HTHFVa0
      3kq5w8+Fq0Hu3tRI93CIpvolnDt3lqVLati1cyeLmjawcc1yurp6Kcq10d7nZUPrqoSvAPrk
      AOH9XyfWuW+Ob9XMZNIm0DuxWS386dYGPrStKeGrgQSQQZRSxLt+TWjPV1GBUaPHmVKmB/Bb
      9YtK+PT2jVSV5t3wpCObQBlCxcKED/4nwRc+kxUP/mzSdnmUz39/NwdO9tywSSQBZADdN0Tw
      2U8QfeNRUPPjKG6mCYSjfPvpo/zopZNEY7+/jyUAAymliA+cJfDzHddPYRBppRQ8/+pF/vUn
      B/D6Q4AEYBilFLHOfQSeeRA1edXocUzlTNcQ//DwPvpHJmURbASlFNFTPyd84N9Bjxk9TtKy
      ZRGcSGGuSw6EzTWldCKv/5DI4e/wTm8zFHPnmi8kAcwlpXQir/4XkWM/NHoU8RZZA8wRpXQi
      h78jD/4MIwHMAaUUkaPfJ/L6I0aPIv6IBJB2iujJJ4gc/YHRg4h3IAGkWfTCLwkf/Cay4M1M
      EkAaxftPENrzL/PmPbrzkQSQJrr3CsFdn4Vo0OhRxE1IAGmgokGCL30B5R82ehQxBQkgxZRS
      hA98E33gtNGjiGmQAFIsdmEX0TNPGz2GmCYJIIX08R5Cv/4Gsscne0gAKaLiUUK7/xlCE0aP
      ImZAAkiR6MkniPcdN3oMMUMSQArEx7oJH/me0WOIJEgAs6SUfv28/qjf6FFEEiSAWYq1vUz8
      0qtGjyGSJAHMgor4CR/6FrLXJ3tJALMQOflERlykViRPAkiS7hsmcvwnRo8hZkkCSFLkjUch
      5J36H4qMJgEkQfcNyukO84QEkITIG49BxGf0GCIFJIAZUsFrRM89a/QYIkUkgBmKnt8JoWtG
      jyFSRAKYARWPEDn9lNFjiBSSAGYg3nsUda3X6DFECkkA06aInv6F0UOIFJMApkmfHCLWe8To
      MUSKSQDTFOvcC7GQ0WOIFJMApkEpRfTCi0aPIdJAApgGNdGHPnTe6DFEGkgA0xC7dAjiU32y
      r8hGEsA07L8wSbuqI645jB5FpJh8QMYU/MEIj14sxh/6EAW2CGtcvbQ42llp6yJPyRHhbCcB
      TKH9yhj+UBTQ8MacvOJbzissx67FqXON0OLsoNneQZXWh6Z0o8cVMyQBTOFs99A7fj2qrLwZ
      LOfNYDk/51ZKHQGanV20ODpYYevGqQfmeFKRDAlgCud7pr7ArUJjKOJhd2Q1u2nCZYmzyn2V
      Fkc7q+2dlKhBtDmYVcycBHATgXCUnoGZvutLI6TbOO5fxHH/IizcSbXTS6uzk2ZHB8usPVj1
      SFrmFTMnAdzE4JgPX3B2D1Ydjd5wIb3hdTzHWvJtUda4eml2tNNk65SFtMEkgJvo7B9P8XfU
      mIg5OOSr4xDLsGqKOtcIrc4Omh0dVHNFFtJzTAK4iZ6BdD47a8SVxsVgGReDZTzJZhY4gjQ7
      u2lxtNNo68apy9Xm0k0CuInLQ3N3pWeFxnAkhz2RVexhJU6Lzsq3FtJr7B2UqsE5m8VMJIAE
      dF3RPzJp0E/XCOtWTvirOeGvRuMOqp2TtDg7aHF0UGe9JAvpFJEAEgiEo0zOcgGcKgqNy+F8
      LofX8gKt5NpivzsivdreSZ6e6rWKeUgACfgCEYKhTDwBTsMXs3PYt4zDLMWKYpl79PpC2t7B
      Iu2yLKRnQAJIYGwymAWXvNWIo9EWLKUtWMqTbKLEEaLlrYX0SluXLKSnIAEkcM2Xje/+0hiN
      uNkbWcleGnFY1O8W0s32DhaoATki/UckgASyM4C304joGif9VZz0VwHvoso5SauzkxZHB8ut
      3bKQRgJIyJ+R2/+zodEXzqcv3MouWvBY46xx99Jsb6fZ0WHahbQEkEAwPN8CeDsNf9zGEd9S
      jlCLxj3UuUdpcVzfzVqj9ZpmIS0BJBCKxIweYY5oKKA9uID24AJ+wUaK7ZG3Tu1up8neOa8X
      0hJAArG4OZ4Bb6QxFnWyP9rIflZg07i+kHZ20OJop1S/Oq8W0hJAAnHTBvB2GjEFpwOVnA5U
      8lNup9Lpo8XZQaujA93iNHrAWZMAEtC0+fQ8lzr94Vz6wy28RIvRo6SEXBUiAbvNavQIYg5I
      AAnYbXLXmIH8lhOQVwBzkAASyHPLRbDMQAJIIC8n+/dwiKlJAAnke+QVwAwkgAQKc11GjyDm
      gASQQHGeG6tFjgXMdxJAAh63A48shOc9CSABp91KgUcWwvOdBJCApmlUl+YbPYZIMwngJpYs
      LDR6BJFmEsBNLJYA5j0J4CYWlxdgkbNC5zUJ4CZKC3MozncbPYZIIwngJuw2K3VVxUaPIdJI
      AphC4+IFRo8g0kgCmEJTbdm8eg+s+EMSwBQWLyygpCDH6DFEmkgAU7DbrKxeWmb0GCJNJIBp
      WNdQYfQIIk0kgGlorltIjstu9BgiDSSAacjPcdK8rNzoMUQaSADTtHV1jdEjiDSQAKaptb5C
      To+ehySAafK47GyRV4F5RwKYgbvW1crJcfOMBDADSyuLaKgpMXoMkUISwAxYNI3339pg9Bgi
      hSSAGdrQWEnVgjyjxxApIgHMkN1m5f5b640eQ6SIBJCEba21lBV5jB5DpIAEkASX08YHbm80
      egyRAhJAkra1LqGiJNfoMcQsSQBJcjps7Lh7jdFjiFmSAGbh1qZqmmpLjR5DzIIEMAtWi4WP
      3tuCzSp3Y7aS39wsLa8u5t6NdUaPIZIkAcySpml85K4mFhbLbtFsJAGkgMft4GP3r5UT5bKQ
      BJAitzRUcs/6pUaPIWZIAkgRTdP46L0tLCqTS6pnEwkghXJcdj61fSNOu3zGcLaQAFKsflEJ
      f/PeVrmaXJaQANLgng3LePctsh7IBhJAGlg0jY/dv5YVNXJh3UwnAaSJy2Hjix/ZQkWxnDCX
      ySSANCrOd/Plv7qNvBz5uNVMJQGk2eLyAr60Yytup83oUcQ7kADmQFNtGV/48BYcsns040gA
      c2RtfQWf++Bm7Da5yzOJppRSRg9hJscu9PEfPztMOBo3ehSBBGCIUx0DPPT4qwTCUaNHMT0J
      wCBtl0f5xuOHGJsIGj2Kaa1aUioBGGlgzMfX//cVega9Ro9iOrc31/DJP9sgARhtMhDm2794
      jd9c7Dd6FFOwaBp/fsdK/uKuVVgtFgkgE8TiOk/uO8fTB86j6/LrSJdct4O/+8AGNq2sQnvr
      zUsSQIZQSvHa+T6+t/MYXn/Y6HHmnaWVRXz2g5uoLs3/3YMfJICMM3zNz3efPcaJ9gGjR5kX
      LBaN92+uZ8fdq3E6bjwaLwFkoFhcZ9fhNn629yyhSMzocbJWWZGHTzxwC63LF6JpGm8e28ej
      zx2gsnYFn3rww4AEkLGUUvSNTPLw88c51Tlo9DhZxWrReM+GOnbcvZpc9+9PRDy484e8dHYS
      u1VjY1Uep4e9EkCmi8V19r/RzeN7zjA+GTJ6nIy3rKqIB9/bysolpX+wrQ/XAwjX3MXh5x+n
      sbKIrX/9cQkgW0z4wzx94Dy/PNpBJCanUfyxojwXH76riW1ra7Hb3vmkw45Th/nJM//HkhVr
      uaWmhOVbt0oA2UQpxZXhCZ7af55Xz/QSl12meFx23rt5OX9yawP5SXyMrQSQhZRSXBq4xlP7
      z/Pa+SumDCHHZec965fxwNYGCnNdN2zuTJcEkMWUUlwemuCFw20cPNVjij1GJflu7ttYx93r
      l1HgcSb9wP8tCWAeUEoxNhlk3/Fu9p24RP/IpNEjpZRF01hRU8Ld65exeVU1bqc9Zd9bAphn
      orE4Z7uH2Xu8izfaruIPZe8p16WFOWxetYi71tVSU1aAxZL6qy1JAPOUUopAKMqJ9gEOnenl
      TNcQvmDE6LGmVFaYw7qGSraurqG+pgRHgj06qSIBmIBSilAkRvuVMY63XeV05yCXh7xEY7rR
      o+Fx2VlaWUTr8oWsra+gujQ/4W7MdJAATEhXCl8wQmffGG/2jNDVP87loQmGr/nTukfJabey
      sDiXmvICllcX07i4lJqyApwO66wXs8mSAAQA8biOPxSlb2SSwXEfQ+N+Bsf9jE0EmQyE8Qcj
      +MNRolGdmK4Tj+vEdYXVomGzWbBZLDjtNnJcdnLdDvI9ThYU5FBe5KGsyENFSS7lxbm47La0
      bMsnSwIQU1JKoStFPK7e+jMoFChAu76XRuP6mZdWiwVN08iWzwqRAISpyUVqhKlJAMLUJABh
      ahKAMDUJQJiaBCBMTQIQpiYBCFOTAISpSQDC1CQAYWoSgDA1CUCYmgQgTE0CEKYmAQhTkwCE
      qUkAwtQkAGFq/w/lALGInk7MagAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='78' name='Profit' width='124'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Trend' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29V5BcWXrf+TvXpq2sysryvgqoQsF1wzQabafHaIzY5AyHHIkUR6QocSUx
      dpfLZeyDQi87etiX3YiVNrgRjCUlMlbSxnDI0QzH2+5mz7RFO6BhC6a8zzLpzXVnH7KAhik0
      Msub/EVUAJl5v3O+vPd+eY/5n+8IKaWkSpV9igZQjYEq+xXt9n8ymcyGFpzL5QgEAhtaZpUq
      a+Vh96MGIIQgHA5veKWbUWaVKmtltftR2QY/qlTZMVQDoMq+Rnv0IVW2imJqhv/zL77Hv/mT
      f8nC9AgfXrmMrTaj2dPoRoiRqRRPnz5AtGOAWFDfbnf3BNUnwA7ixz97jYb6AJ6UxFo7cbIp
      WlqjJGamSKeSLC8u8vLrb/Pma69tt6t7hrKfAFJ6XL92nQOH+pkYuYXUAoQMSOQc6gM6BGtR
      CwlySpCW+shm+rxn6e3p4sL3f8o7b7xGKj7CcL6WBtemrq0NR2/jhbMNzCfTLKZS2+3qnkGU
      OxHmuTY3hobpHewHu8iNW2OYhkaNAQt5BVVXUApJCMboaWsinU4TCoU22/8qVcoim80SiTz4
      w1z2E0AoKoqQuK7Nres36es/xNjwDTIu6GoA3DzoPgBUVUVVVTSt2sVYD1JKCu+/j+/kSYQQ
      2+3OrkZRVm/tl32HunYR1TRILKUIhwLEFxbp7uwgVXCIBP2Ah4e6Ic6+8ZNvYDWepiuY4c1L
      U5xsD3N1qcizTz1NrZrhOz99nbqGNmrUPDcml2gysoT7nmPuwndoeOK3ODvQuCF+bDcymyP+
      7/8D7X/+/yCqk4qbQtmdYM3w09vbS3NjjM7uXjpamzADIRqitRimiWH68ZkGPtNYt1MHe7tI
      pHL09B8iu7yAWVODml9ibimDlU2ynHW5euUCnW3NOFIh7wVYmr5KamGGRM5ad/07BWdxEaEb
      SNfdblf2LDtwFMjj0sVLXB+6ytDli9y6eYOCq2MIj/jUMDfjHgMddfT0DPDn//Ev6ehoRVFV
      SE8RaT+OsoeaCrk33yT0mU9TvHJ1u13Zs5TdCa6UdDpdlUKsAyklc//r14j+s98j8/evEv3n
      v7/dLu1qHnY/7uheqpsbxbPLG/JTzCZUX9Mme7R1WMMjGJ1d6F1d2OPjSCmrHeFNYEcHQHH2
      +zjJ82UdazT/KmrLFzfZo60j9+abBJ4+C4qCWluHu7SEVl+/3W7tOXZgH6CK9DyKQ9cxDx1C
      CIF5ZJDi5Svb7daepBoAOxDrxk3MA32IlbFr35GjFC5f3mav9ibVANiB5N58i8BTZ++81pqb
      cGbnqiv3NgApXcZHR7Gc0tByNQB2GNJ1KQ7fwjhw4M57QohSEMzMbKNnuxspJVJKFmYm8Ufq
      GBubAOxqAOw0ikNDmP39d5o/AAiBeeQwhWo/YF1IKfGkxDBNBBKQ1QDYaZSaP0898L7vyJFq
      R3gdCCFQFIWGplbmJ8Zobm0lnbYqkEN7LteuXqf/8CFmx27hr2/HycRJZF2iQQ0CdWiFBFk1
      SFusdjO/y55FOg7W+Dh1Pd0PfKbW1eEmE0jXRagbo7najyiawcGBgZVXZgXzAFKiCgUPCAVN
      UjkLK2dRZ0I8LVELcZRCCoIC1w3jui6O46zL2Uo6fdLz1l3fdlO8dAljYADX88DzHvhcbWuj
      MDqK3tW1Dd7tbrxVzidUMhEmBK5jUbRsPM+lUCzi2RZJW2LoQXDzSMMPbJwc2qpg5lMoyq6X
      XyffPkf485976PcIHDuKffUa/r6+LfZs97NuObTn2oSjdRSyORxXJ2hIYo1dZIsuIb/JRsqh
      9yPStnFmZtE7Ox96jDk4SPYXfwEv/soWera3KTsAVN1He3v7yquP2viGb6Nd2p8ULl7Cd/TI
      x+p9lHAYr1BA2jZCry6K3wiqo0A7hNybbxE4e/ZjjxFCYPR0Yw0Pb41T+4BqAOwAvGIRZ3ER
      ra31kcf6jh6hcKkqi9godnev8X6kZGFmFDfQDJlZZlMOvS0RLly5xekzT2KqHh+88w4tfYNk
      4+MUlBCmnSLWc5i5W5do7D1CNGRuuduFCx/iO36sLLmz2d9P+kc/3gKv9gd7KgAkcPH1H2Ad
      +BJLV94gpArC0c8QLM7w/q0FjtcuMzSV4vrYK7zw/Fle+e4PiZoWdQmbiy99nae++m85EzLJ
      3fpTPCteVp1m62+gRx5bl9+5t94m8o9+s6xjhb800ubl8ygr/6+ydvZUAAgh6Ovt5fYCQkUR
      TNy4TNHs5tN9EebHJnA8B4HHL37+Ez7/xS9z/vWXyUxfIRxrv1OOZ83jFcrT3Ug3ty6fvXwe
      N5VCaypvMY8QAuPAAYo3buA/fnxddVfZYwEgpcv4kgfmNE+fOcFMysXvZVjOphgfG8HRmulp
      SNPUcZThaxcYGxvl2OMnsPMpjGAYX11wy33Onz+P/7HjFa328h09QuGD89UA2AD2VAAIofLs
      P3jxzuvV5ksPdreV/u3dGbOpubfOUffVf1KRjdHbS/K/fWuTPNpf7KkAuJv86F/g5sbKOtZo
      /hWM6IMCtM3Gy2aR+TxqLFaRnTAMFNPETaVQa2o2ybv9wZ4NAM9axCvOlnWsdLKb7M3q5N//
      AP+Jxyte7C6EwBwYoDh0ncATpzfJu/1BdR5gG8mdO4f/zBNrsjWr8wEbQvlaIKfIuXMXOHX2
      FDeuXEYxQ5jCJp1zqA3qyGA9Wm6enB7lYMfeSU+yWbipFNJxUKPRNdkbHR0kJiaq6VLWSdkB
      oGgmTbE6XMciWBvDtfJINNrrNWYyGnouiWM5CM3Fdd1tl0NXsnx2PbbeGmXYuXfexXz8cdy1
      pj0UAiUcxorH1xxE+4l1y6GdYo6pmRnUcA3p5TiKEcJULCYWHOqjUaRr4QZrQVF3hBy6kh/F
      1WzLjQFljTLs4nvvE/2Xf4C6jnPkOzyIc/0G5rPPrLmM/cJtObRTzHL95gjNHb1Ea/zlB4Bm
      Bnj2E8+XXrRUmzjrwV1eLv2Cr5KvvhJ8R46Q+sEPCFYD4JFIKXFdl4X4PF0HBpmdGiNa01bt
      BG8HuXffw39q/Tn/teYmnLlqupRyEEKgqiqmoTM3MwWKjmVVF8VvPVKSf+99/KdPrbsooapo
      DQ04M+UN91aBuoY26mtr6O5sQ0pRDYCtxllcQhg6ykZkzhYCc3CQ4tVq+vSyEYJIbS2qomCa
      lSyKXwOXz59jZHqZk8cHuHz5Ku0DJxhoj/DyS68QjHVwor+Zr3//FzzRVUO+dgAR/xCv8Thn
      Bh++LHC3k3/3HQKnT2/Y0KXv8GES3/gGoU9/akPK229sagBcujxELKAxnjOp0V2Wk1mKNUVm
      0h7Z8bdJzzZg2VkWliQLi9cQC1dRvA7YowEgpST//nnq/+h/2LAy1foobmJt6VLymWXe/eAy
      j586yfWL56lt6aGvs4VMYp6pxQJNNRoXh8Y4MtDN6GyG/rYwVycSPPHYoQ3zf7vZ1CbQs8+c
      ZTyeZGnoDYYzfgZaQ0wsuRxqq8HnD2OafsZv3iRTcDGcZdTQo1dE7Wbc+ThKMIAS3DjVqVBV
      9NZW7InJim3feOlnNLfU88OX3qK9o4Nf/qK0/3BqbpyX33qft197nezyJG+/9SY/efltLl+9
      yOtvvrVhvu8ENvUJEInGePE3f5uAJokvJVB0Hy3NQWoCJsdOPY3P0Dj11NNoQpRGMhR1T2eW
      yL3zDv4nntjwmVvz8CCFK1cwuitTuD7x7HO8/otXQInyw5/9kq/846+QSiVpbe9AfX+KomsR
      NH0kc0Va6vxMpRyC+t7qNm5qAIRq6gg4aXALdLYEgdIGdsF6A+QyXhECd3ug+lG0vbnKSUpJ
      4cIFYn/8xxtetu/QIEt/+VfwD79QkZ2iqIQbezl7qJu33/mQ4eExdCwmrQwtNX4eP/4Yo6PT
      PH+6G9tVSBctOGBvuP/byaarQYtT38Reer2sY/XYJ/F3/M4me7RZSK5d/ICiVkNDACYWcjxx
      8hiKENy6/B7CDbG0MI3qadx8/TUeP/s07772C04/+zymur5fVSVSg5fPIy0LYZS/S2eorpFn
      nyltKfv5zzff89nhx0v/dnR033mvZV1e7kz2rBx663F4592LSEVHqJKOiI/R7j7afQVee/Ul
      AjMaUrdgscDQ2z+DSBN//fW/ZfDss+sOAKEoGF2dWKNjmP0HK7K1l9+lMPU3ZR2r+JoJHviT
      tbi4Y9lbDbrtxLVxPIHr2pw5/RiXb4ziFrJcu3wF1TCZuvIBvc+VFt3UdR/l8svfoffwkQ2r
      3nfk8Jp2kZFeEWkvlfmX3DB/dwoVPwE8p8jlK9dQjAB+1SGdc4kEdAhF0bJxckaU/s7mRxe0
      11D9PHXmKEU1jF93efqzLxJ2UsSOPklPpJaJRJFZXzP63AiPn36S7OARfIZBUNuY3yCjv5/0
      z17akLL2E2trAklIJhP4G6J0xCjJofNpXMdFMbx75NAVSZqlvE+WvLvk0AcGP1qk3vrRASz9
      4Oe0n36S/tVEa7Jk/9JPfoQaaqAprLKQFzz35ElmRoZ4f3iek4NdDF27SnP3Ac794jy/9ZvP
      8P/+3Zv8d1/99Y/KMU2k62Kn03dSp5Trf7lI2LUZuNefHXoFRdUJhwP4wnUIL8fkokt9tK7U
      BAhFEYp2jxzarkTSLMQ90uLdKIfOXPt3SCd957UsSoqXZ9EO3iR/7Xv32Pq7/gVaeBCwGB+d
      RK0pMJycoqm9H0eoXBu6ikwVmHOPkYnPkow1MnLlKu9faiKTTzwgwzb7enHHxvAdPVr2d/ce
      kjV5NQTs2gzc684OfQeh0N1bWUdrPyHtJNL5aHNve9TFOKaitReRdvHeY72VX1M7D3oY17aI
      NjRhp+a5cOEiR888xys/fgW/l6XrYC+jM9M8fvwAb1+cotZ4MMJ9R4+sJNktPwD2O7sznHcL
      EqwPHcRpj9femcYM+3niUB3DN+aYyOt0Jt9mIjVCe3cXseYY7a3NPHbsMOlckYChomgan/uV
      z1IT8rMQ9HH8dAy76Kwk93oQo7eX1He+V2rDVZdJlsWmBcDS3BRvvTFCrTbJwRqHv397Gl9N
      EN0uspSXNEd1LDTCpmCgt27VC7rbcZMeSPC3+TBmHOYTpSdAe72PV99LIxhjvmCRsj1kNsPF
      +Rt4Xo7Tx1d2iJRQGwSkRWMtYMXRBeiqQPU9uChJ+HwIXcdNp6vpUspk0wKgNtZMcOwGmVwR
      Sy8J4HIzcep9gmQRbNsknSgiNQG6waGOrc/KttlYFx2MYxrZTIFgJMitkQxXbiwRUSzm4znq
      I0Va60M0nnia+I0PWL76nxk/9yMG9faPL1jo1Dz+Zw++LQTGwQMUb9wkcOrkJn2rvcWmBcDF
      N/6em1mTF7rrGJtwGGz1MTQNRatIwIAnHm/h8vVF0okMs3O5PRcA0pY4kx6+p3RUYdIUg9/o
      rcOxXayiyz/7bITWx79CXjlAfbQWq+0F0rXfYI1L5O/gO3qE3OtvVAOgTDYtAAZOP80Bz0Nd
      GsHfEqQQNTl62EA6LnkHIkGNuhPNOLaDbu693U7sWy56t4rQBAJBLFoamjQ0hYC/9H0Nw0cw
      UgeAaZoUDR3WGQJ6Rwf2xGQ1XcpDsPIZbtwapam9m1htcPNmgn1+P83NzYSCfvw+jbqID0NT
      MH06YUvFS0gMXSEQMNDVvXWhpATrkotxZOuVrcIwUEIh3KWlLa97J3N7UfzSYpzu/kGSS/NA
      cXtGgQqv2nhJSei3TYS5t25+AG/BQ/hAhDf/u01dO8cvL89Q39BK8ubrdL/wVQYG+vnen/7f
      ZPt6OXP2LNcvvkO4oYVXfznEH3zlNH/+nff42v/yrzbdt53E7UXxPtNkcmwY3QiQz3vbowUK
      fMHAfFIj++0i7mL5M5G7BevDUud3K5ogAklyeRnLhUMHurFdiXnkCPFUliOdNRS0EInFZXRN
      EFJdPhhN0FRbvmJ0r1Eba6GjrY3uzlY0zdieJ4DwCYxBDbVBIf8zC/OkhnZwbyyEkUWJG/fw
      vbA1/RrHEzQ2N2GqLkO3xrFyjYiQS0M6wdB0geMNi8RaW3FdycmTR5nN5miI1j664L2KEAQC
      AQAUXdveiTA1phD8kkn+JQtnzsP44nZ6szHY1130Aypii/o1nYfP0Hl45cXzH+0yuXjhEjUv
      fAK9pZnDh3fWzPD4rWv86O++SdfxJ1lK5amvb+YfPHucb3zjb/D0MKcGO/n2t7/HmRODTHot
      dOtTjFuN/NMvfXrDfVlTAKQSSwgjgKl4ZIseAUOA5kPxLGypEvCV/4gVPoH/CwbF9xzSf30d
      4w93b8576XlYVx38n9/a3xWvuICTunDPe2qbRe6d7+N/qufegxUTo/7ZLfTuQTp6BzDqWjnR
      Xce3fzFFqKYBECiKwvjUBL/165+lpfsG9T6dsVSeogLCsTbFl4qvlHQsxiZnkBJMXaBKyYKi
      gz+Iml3EDsQY6KpscbtQBOZpDRZ1Fv79/0XtV38Hs6+3Ute2HWt4GBHMIvxbO6zrFiYpTH79
      nveclEP+FQsv7EOt/airJ/TabQ+AbPwWbf1P4HhFmpqa8evw7vsXONDbTai+g9FL73Hiuc9g
      zp7ngG5gaR3U5jfHl8oDAIlnW6D70HSDiAHxvIZq55GKhipYkxxaCIE20I3/+GdJ/OVfYZ55
      Aq2rAqnuDpBDp196GeO4WrYMx/Puz6BdfsV323nug+dJ61PxSYP8jy30QyrGcQ2hlGSu99hu
      ghz6yvl3uHprhhe//KukZ8f54N23obYHYaXQzCDW4hi9jz3NslvDr37+8Xts79lvs+MFDtz1
      cj1S7A2TQwtFIxDwoZghQgYs5RxaYmGka+GoJkIo65JDG02NxP7kfybx9a9TOH8J33MSod9d
      hseb78xwc67IV1/sZWRkke/+bJSnPlXHsmITUBRGZgqcbF+gpd4jFnj0QNdGyKHdVApvaQnj
      bA14mTJt78+g/ehzlU7lWcrbHHtcw3MtbtwYpatJYW4ujRbwUcwWaWoMkhcuoeMaxqBK8R2H
      7LeK+D9hoLXeK2leqxx6cW6aydk47Z1dzE2OE2lso62pnuX4DIHaehZn32V4bIr+5hjTs8t8
      /pnPMnr9EgvpNNmlRX78zf9KTVShI/Ikvke4oJiN6JH1bQi4YXJooagcHBi883oz8kQrpkHd
      7/0uib+bJ/vtCwQ+b6DU3P4CCn5D0N5aSi3Y211HfdMSi1Pj/Or/9DX+y3/4U4xgM298MEp9
      MMlvfnprNsPLvf4GgbNnkcp3kZs2sitZTFq8fm6avs/DBz/6PqKpgQvnLjI2NMunn4hx8eI8
      mH7aOmo4c6gWoQvMpzT0RZX8qzZ6W4HgwSKKub4NwUM1tcy/9nMKhTQ/f/MG/+r3+wD4/g9/
      yrnXXybWNsDVV7/LrUgTP785R++b3+Y//vAm/+7f/hHmgVauvfd3fHD+JyyMjtDwCFe0yMl1
      B8DD2LFrgoUQmI/58T2nk/2+hT3mlpomns0v318k5FN57+I8s2OLHDrexpMnDvPDb/2Qs7/y
      uzx1+ihPP9aJz9yazqh0XXLvvUfgyTObXtfsTIq+I00EAC1oMjk2hW1ZNHfU8u6VRSI1BslE
      ihs3FllcWX4ghCiNuP26gQgWif/v/weFy1fWlVXa9JlMJj1OnXqSP/ydL/D97/0AkHh2lr7j
      T3Kgq4GC1NBweebxs8hIG08e7aM5VkdL92Gee/4Yv/trBx558282O349gNaiEvySQv7HFu68
      h3la43/8/WP3HNMMGM2P85VP3B5HbSUb+jnHulIPlLcZFK9dw+jsRFkZX940JCynbWp0iw/O
      vUm0/QAJa5SewQaGXv0RvQONNPjh+LEm3ruaIHLfYJxQBObJCP4X/3uSf/3X5N58k8Bn2tbk
      SjEV5/GnPomdTXLhw0s88eRZ3n7rLfqi9SzPZeg78RjjU3EOdLUwoIdIupIz/iZCwdI5chAE
      /Nt/+22/B2WgBASBLxoU3rDJfrOIeVpH79k5E2eZV/6emi/+2uZXJARf+HTvihy6lGHi4MEB
      7OR5mp/quOfQzz398GDUonVE//BfU/jgPIn/9P+hDTroh9SKZq7NSDMnIiWNzXPHjlMcuk7h
      yhWKQ0MIRaX5X/9zDj+282UuuyIAAIQq8D2rk/uOhTPq7pgAcBeXkPk8evsjNPw7DCEE/pMn
      UJqzJP76z7GHXHwv6PcMma6GlBI3Hl+54S9jTw6BsYTaBsZgM77nW0j+5yFyV/4U4fsoABR/
      G77WL2/216qYXRMAsNIvOKNhX1uvan7jyP7yNQLPfXHXSo+FKfC9oOPOeuR/YqH1qpgntTsz
      2VJKvKTEnfJwpqbJ/u3/hhqtw+zvx/dkCO1UEhRtZeh3AbewgH7IIffme5inPpoPUb3C9nzB
      R7BqACRnblAIdZOcGaG/v3+rffpY1JhCYcHeEXp36Ujs4SzR3zmxrX6sFyFEqa/1GwrF9x2y
      f1NEbVSQlsRLSERIoLUp+J9uouapfwNqqblUnP8p7tSD18A4pJL5ZhHj5NYIAtfDqgEwfOsW
      Y6lRent23mysMERpzYgH251I2hn18B97dt1DijsFoQl8T2hYYYF1xcX/vI4SFaAIhADFpyLK
      SIsiDIHaqOBOemgdO6Op+jBWbfD19x+kWCiwsLi41f6UhVIr8BLbvDGcLK359T2xu9r+j0QI
      9EMqwS8bqA0KQhVrSjBhPqZRvFBZYrTtYNVwFqpRkjvsUNQmBXfOQ63fvmkMd9kDpRSMuxnH
      svnluSlcTeeFk418eHGWLBqttRpXbyaINQaZT9j0tfjpHWgjVGa5SkxBZiUyB2IHL/de9Q5S
      NB/hoMnC4sJW+1MWanMpALYT66KDcXRXjSGsimboNEZ0Cnbpl/rty3EWF7LURHzMz2eZX8wR
      n8vw9qU4714uv0UgBBjHNKxLOzuV4sf+hAb8D44lS89hfHSEyZk5ivkMC0tJ8tk0BcvBymfJ
      5IurlLSxqDEFN+5t2+NVWhJ32kPr2rET6WWTWUrxrV/O09sa5IMrcZqjfjKZIiPTWZrqDZo6
      YhzsDNEQ0UkkK5Nk6v0q9g0X6e2cZlAxl+LSpYvML6UAuXoTSDMMVEUltNpO5kKlpbWFWyMT
      ZJNLGAosSw18ftTcEk4wRn/n5u71dacjLClHP7bh2DddtJ5SxofdTrAuzB9/9RCKqqC2BHjs
      UD2OC6oCdm8tpq7gdQUQUiL8lc0aC02gtSs4Yx7asUcfv5ncWRS/tEhv/xFmJkdpjD5kSWQx
      vYBnhEknlx/4TAhBZnmB+uY2UgszhAxYyGuoTh6paiisTQ5928lys0OLiMBLStS6lfHqLZJD
      SymxrrgEPlca4/buty2/2k2VQz+U++TQUkr8vntvA2PlwXZ708nSlIBAKKJiKbXxmEbhVRvz
      6P3XtgIZ9n33xVqQUqKqKkG/n1s3rhKqqSObdVYPAD1Yh5O5RF1zx2of46o+YpEA5E0SOZfW
      hgh4FrZqIFifHLrc7NBak4I766HWla7WVmWH9uIS4QcRKlVwf3ZoQSVS6srl0Le5205WssOM
      2Bg5NIBbhq1aqyAdiczca+uICuq9775YC7fl0DXRJgYjMVRVRcqHNIHcQhIbE11bfQw3FosB
      0NDcTsO63Fo7apOCfdOFwUcfu5EUP3Qwj+/8CZ4dgwDjuIb1oQM7IVndXcEkhFi9E2wXCzS2
      d9Heshlq/41Bbdj6jrBXkHgLHmrb7u/8biV6n4p1bQbp7hwJy21WvZK+ujaCpHjv/MWt9qds
      hCnAprJG9zqxrzno/WppaWGVshGqQGlLkv/g/Ha78gAPNIGk5/L9734XO5dk4IXf2g6fykbU
      CLyURN2CySjpSewhl8Cv7Q3Zw1bjf6KN7MuvEDh9al3lJOYneP/qGAO9HQxdv07/8TO01wd5
      6803wFdHe53OyHyGloCkEOrASI9SCHbS0xRetbwH+wBC4dTp01y8+CFzk6PQU78uhzcTrXml
      I/wICe9qpJazvHt1kTwGX/4Nh7dff5UPr0/ymTP9fOvb73Io6rJcEMRqDZ460YQz7qHUKii+
      6q//WlDro6CpOPPzaI2Nay7nB9/7AQ2dBwjWxvAK5xiZmKGt/iCHjxzib771M87n5jlw+BST
      C3PMOgl8mas4jQo9Tat3Fh+4c4QQdPUd4sUv/SM+++xO6LU8nNuSiLUQDBkkkxZH++tA0YjV
      hnGkoOfAIUxdobbGIJXKMzSyyN+/PU/uh1ZJGFa9/9dM6FOfIvPSy+sqIxAK0xHVeOP8LY4d
      GWRyYpKZmSm+8bff53f+6W8Rrm1ALcwzk7IxSYOv7mPLW6UJ5PGT//ZXLIhGdEXwj7/84roc
      3kzURoXCW/aaOsIj1+MUdAM7b/HuxWk8VaGpIcr161dJJWw6n21FagbJ5TTBGgMlIjCP7X7p
      w3biO36M5Le+hbTtNZfx4pe+xIdXbvHcsVY+vHyTX/3MUywvLXJ4oIcLF6/wpRc/x/BMkhMN
      NXjSw1N1PPnw6/bAJ0JR+NQXvshPXn0Hw1+u9Gl7EIZArvFcHjjSyoGVfarNtlbMxk/d+eyP
      fvdJvMIMxweiQBQ34VGI2PescKpSOUII/KdOkXvnXdTutZWhm0FOnShliHjmmdJwfCgYpKOj
      884xx2ofHJxPp9MPvAcPUYMqmoHQDI4cXKOXW4UAJSyQKQktm1eNO+GhtVeHPteNEIQ+8QkW
      /+zPqOkeWHMx+Yn/ir3walnH6vXP4e/83Yd+vupVLaYXGB0d5dz5S2vzcAtRmxWc2c1VhjqT
      Llr7zl7YsVtQIjUooRD21NQ6SpEV/n2MP6u9WcikqG1oo7lp544A3UbrUHAmNi8ApC3xUhKl
      vtr82QiEEER+48tkfnhuu10BHtIE8tc28uLnDvH+O+888JmUkpGb1zFCdXiFFKmcQzSo4wXr
      0fML5LRaelpjm+74bdSYgrew9k7Vo3AXJUpUqUofNhCtpQXVGMDLDKOEtve8rrT4irwAABVj
      SURBVDoKdP3GTYYnFwjUPSiF8OwCcwuL1LgKfkOhtVZnJqNheMsUrBwEAluiBr2N0AR4IJ3N
      UYM64y5a58Pb/7tdDbqe5LgV2d53bc0zBylevI7vqUdn0n7gvqhgfcFt24qS48bjCzzsYiia
      jt80sW0bXXqMJRzq6qLgFXDNMCC2RA16j09RgUyA1rHBalBZWvhiDD78IlXVoGXa3ndtzX6N
      zA9dzCe1R0pL7re1K5Ci3LYtOzmuUBSeOXua//Ltl2g0Hpw+ForG4yfXN5290dxZIrnBiy6k
      U9rySGzzY3pPogq0TgVnxEPv274BhtXXBCsqRw4fxh/c5FyXG4TapOBMZze8XHfBQ6mvtv83
      izsy6W1cMblqAAjNIJ1KEAru4OX8d6E2KFjjoxsujXbGPfSPaf9XWR9KpNTW9FJbl+BASo/J
      8XHslX7TqlfXszKkcjt7Nf/dCE3gpicq6/k+ArnS/ldbq+P/m4UQAuO4SvHDzb/XpJRIKVmc
      ncAIhhkdHQechy+Iae7opqO1edMd2yiUSAFndnbjCrRL2R+U3fEQ3LVoPSrOuId0Nr8dVFoY
      L/EHgih4wEM2yhaqQTadxF7nQuStRGuPYI2MbFh5btxDbVAqG06qUjFCFeg9KvatzV0tJkRp
      F8qG5hamR2/R2NJKOm2tHgCaL8zi1DDjkzOb6tRGYvT0YA2Pblh5zriH1llt/mwFxjEV66Kz
      kS3Yh6JoJgODg4QDPsLh0EMCQNOIRqMoFazc3270zk7s8fGNKUyCO+Ohtuye77+bESGBMATe
      0tZn+1v1Clv5FK7qI5dbXUK6ExGGgbTXtjbgfqRVSn2u7I5R4F1PqTO8MiS6xTwQANLzeOf9
      S8hCCqHsrgUgWnMTzuzcusuptv+3Hq1TwZnxkNbWTgo8+AQQgkODh4nWx+hsX9sGatuF0dOz
      IR3hkv6n2v7fSoQiUOsEuR9vbVbyBwNAerzy8sskkwnm4jszO/TDMHq61x0AUspq+3+b0Ac1
      vLTc0lxPq2iBVH779/7g4RbS49KHF4g0tN6RQ9cFdWQwipZbIKfX0de2Pfni9K4u7G9+a11l
      yHwer5BA8VebPxuF53mwouD0XIei7SIA23ZRVAXH8TA0BaVTQbks8OIStXFrzn/ljXwpMUyT
      VDqNX1doqzNKcmiZRLGKSMXeUjn0nWM9D09V8awijm2vWQ5tDQ+jxAogjEdYlajKoR/Nyz++
      jHKsgxf7HL7zzW9g51KcOFPL3/2nc7QdbmdmtsjxgRB9fTGixzWKHzoEPvPR+d9MOXTFz3kJ
      qIqCbVm4doHx+QxhU8HAQvhrUJR7k+NWIiS7LV29/VeR7YosWW9sQi4trUkOrWka9rWhitr/
      yl22mqZVlDXlthz69l+lcujbf8oa5NB3bNcgh67UdrC3bqVeFU3xyFge7755C9s0yXuCkCn5
      YGiZX7w1hdqm4MU9ZPGjm/yB+2Iz5dCPLFBR6es/VKnZlmH0dGOPjEK0clspJcXhYXyfrAV2
      zxDwzkZyYzrHYk2Kt996i6aWVlQ9wGNHGzjT0EEyWIu7nEYVHhMJF6EI9H4Va8jFPL75o5C7
      a5yzDPSeHgoffIC+lgDI5cDzUEIhvEI1ADYGwQuf6kcNtRI8+NSddwvT38bqaqAJIFa6WLc3
      5NUHNXLfK2Icq2z3+rWw54Y6jK4urLGxNdlaI6MYPT0b7FGVShF+UGoE7iZn+4A9GADCZyKL
      xTUtsihcuYLvyOGNd6pKRQghMB7TsD7c/HTqey8AhECLxXAW4hXZSSmxRkaqT4Adgtqs4CU8
      vMLmzgnsuQAA0Lu7sSeWKrKRuRwAyi5ZBbfXKXWGNeyrm/sU2JMBYPT24M5VduKKt4Yxens3
      yaMqa0EfVLGHNnfN8N4MgK4u3PnKbIrV9v+OQzEFSrQkktu0Ojat5G1E+P0oorGCmWSJNTqK
      0V1t/+8obm+wd76yDbo/Dum5jI2MULRLLYS9GQBCoEZrSlmjy8DLZBGKghLwb7JnVSpFbRTY
      s9dxU6l1lXN7UfzC7CTBunrGxycAe28GAKzkCipz9xjr1i2MAwc22aMqa0EoAn1Aknv9jXWX
      dTsINF1HrGSOXlMASOlhWTauY1MoWriOjet5eK6N7eyMrTAr2T6pePU65uAWbzhcpWx8Jw+R
      e++9dW2zentRfKy5lYWpCVra2kinrbVJIeYmR5laKhAyJI7tYho6MlCLlp2n4G9gsLt1zY5u
      FGqjgvvKo5tAUkrceYnR073pPlVZG4o/gNHRSHHoOr7D6/uhUlSDA/0rogufUXkAuFaWm6PT
      OK4g0tlMLAxzWQ3NyeIpGrrCtsmh75EWm6W8PlLKj9WTyDwooW48TcNbsa9ESl2VQ5dp+8C1
      rczW//zzpH/wA7T+g5ufHfrjUI0gzz73NDMz80gnz3zWpSkaRLoFHLUWhLrl2aFh9QzPSkgg
      0xJR8/By3GkP38Ch1bNDl0E1O3SZtvddW6eCjCNCCMyuTlK5HCKd3l45dAmFlpZS1rjtb+w8
      HLVJwZ33UGoefrKdCRf/J3f2ZoBVSj9wwaefJvva6+iPb1y5e3YUCFZGgj5GUVhq/3uoTXv6
      NOwZ/KdOkj9/ATZwoGVPX/nSSNDDGyQyv7LDzJ5bFbE3Ufx+jN4eClevbVyZG1bSDkT4gOLD
      swy4Uy5q254+BXuO0AufoPDu7IZlAt/TV18gECGBzKx+skr5P/f0KdhzaK2tqL5+vHQ1AB6N
      WJkPmH/wZElPljLANe7tU7DXEELgO9GKdXlj+gF7/uqrTcqqS+tkHoQhSn2AKrsKvU/FGXU3
      ZE+B/REAq0ginEkXtX3Pf/29iQ5qm4Iztn6Z9J6/A4QPZOHBjrAz4aF1VPN/7laMYxrWpfXv
      KbD3A0CACN7bEZaexFvwUBuqzZ/dilJb2iDdS67vKbDnAwAhSh3h+F0BkANhVtv/uxkhBMbR
      0lNgPVQeAFKSSafIFywcu0g2l8e2itiuh2tbFO2dt6/Y/R1hZ9JF69j7sb/X0XoU3EkPaa+9
      HVTxHKhEksvlmJodI2AqSEeiahoEatCycYqBBg517SyFkNqkYF34KDCdCQ9jC9LuVdlchCbQ
      OlTsERejf23Xs/LcoEJBeA4oGrphUBOC+ZyG5uTwFA1N7Aw59N2mwg9eQZbekyvt/5goy/ZR
      VOXQZdquUw79sOzQ+lGVwss2+sHV0yhuuBxaei6pdIZgwI/fECzkHJqjIaRbxNHqEOwcOfTd
      LxS/QGYlSInwC4QqPta2Kode1XTb5NB329p3yaGVGgEKeMsSNfrg+btfDi1dh5HRUVo6uvEb
      2vqzQ7dUWsA2IASoDQpu3EPmZbX9v4cQQpSGRC86+D/x8D0dpJR4nsfC7CS1jS1MTUxwoK99
      H4wCraA2lzrC1fH/vYfWqeDOlJlG8b5H9P4JgJWRIG/JQ4lVhz/3EkITCFOQ//nDN9i7s1N8
      UzuJ+AxtHe2k08X9o4QXAXATHmpUqWhJXZXdgXlWp5zel1A1evtWUuAY+v55AiBKqfbU5v3z
      lfcsUjIzn8VdGQ1aWs5RqJNQL5maz5HPW6RyDvnCo+ek9s0TACi1/6r3/65n6OI0Y5MpLozn
      +ORgkJffi+NYLqZ0aOmKcuV6FtsC3VT5dJPk4/L97ZvbQQhB8Csm5un9FfN7kaVEkf6+OtKp
      IrppUudXWEgWSRVdErMJjKCPZN5mKZXjjfc/fp+IPXs3TIwt8f7FMZ4+20FIWrz87jwtbbVk
      FlM4mkFIcTAjITQkj7Vtt7dVKuH4Y838/KevcepQPRduJoiENJ453YLfsxlftHjyaIzxej+p
      xTSxtvDHlrVnA+DclWU+dyTMTy8nebrRJqcavPfBFDV1fqRTIKcJ5q8nMYI6sSM2vY3b7XGV
      cglGAvzDT3aVXrTem9Lm9gxVf2cNdNag1398wuM92wSKBlXODSWp93mk1SBNhkN9LIxTsLFd
      wbOnmunqiaB4NnMLhe12t8o2sWefAC8820V8JkttSMNyocZfz9laH8WCjVRU/LrgmRMB8vl6
      Ygc//jFZZe9SeQBIyfTkGJ4WIGzCctalLqAh/GFUK0NO+GiIbH+mNaEI6mtNAPwa+M3SozAQ
      +Gi6XAH0sFnR7u5V9hZregJEY43cGhknr6uEdJhdVBFGHjWfQAZj1IcDeJ6H67oVKTqRJSXp
      nZcVKknvsS2/1gdtK3H5PttKkNJbs+09/laQLHY953g99T54jiuwZR22K/U+zKbiPoDEY3xs
      jN6+vhWBkUQoKsLJg1b6xRVC3PmjAkUn4j7bChD31VuJtRDrsEWs3WexMbbrOceVPv3u9bmi
      atdhK+7zuQKVMB9/btfQBCqd79n5OK1NMRI5h/aaIEK6uIpWqnLFUUVRKj7Bd2fxreimWKlv
      bdxnW1kEbFy9FXDveVq7baXGa7Z94Pqsp94KDFeuz8PupTXJoQ8OfLRJQShSaQlVquwc9uww
      aJUq5VANgCr7mmoAVNnXVAOgyr6mGgBV9hVWPs2lSxeJL6dZ8z7BVarsNm5PiC0tLtDTf5jU
      chwoVgOgyv5ACIGqqvh9PsaHbyI0k1zO3btiuCpVViNS34wvVIdhmriuVw2AKvsMITB9PgA0
      Ta02garsb9bwBJDEZyYxaprw8kss51yi/lJyXLWYJi/8NNZV9fVVdgdrWg8gpE0qU6CYzhDW
      YXZZQckUUApJCMaIRYJrkkOvSzLreRsmaa7I1ttIOXT5Fd9t522bHLqyBLf31ltJUl65bhn2
      w75n5QEgFILBAPlC6WRYAlRFR7gFhGYi4V41aIXJce9ROVYie73ftiKh4v31ln8r3m9bCQ/a
      lu/03XZKhbrkNStuWbutWEe9gvuv7drvi/tZQ3Zoj9l4Ekex6GhtIpFz6AgHARdXaHcqXYvG
      /bbtRy8qMlxTfeuvt/Kb6G7jtdqu2d/7bddVb4UrJ+5N2b2Oeisy/dh7cQ1yaIWeAwN3Xgeq
      zf0qu5jqKFCVfU01AKrsa6oBUGVfUw2AKvuaagBU2ddUA6DKvqYaAFX2NetSgy7Oz5DIOUQD
      OgQiaMUkWRGkOVqdHKiyM/GcIjduDNPa1Uc4YKzvCZBIZwkrReYSOeLxeebm58lk0hvla5Uq
      G058dobW7j7mZyYBa31PAMdxKEhQFT/CzYPu2yA3q1TZHFRVkM9l8VAAZX0B0NnWQiLn0hj2
      I/DuaIGqVNmp1Dd3MDUxSXd3B+l0vhQAUkoymcwailMI+RVs5/ZufKV9WtO2RS6XA8BWenED
      5W1M7YgunHQaKSVCCGx1ADdQU5atK1uw77K19GN4gdbybL0Y1t22xkk8pbymnGdHKN5lW/Sf
      RbrlbbjhWT7Uu22Dz0EZMmEhVNJ32blWADvwfFl1CtUPd9s6tWXbKnoEeZet4zbglG0bw7vb
      VraWbeuorbh33xeiGzdQnl7XEd046fSd+xEgUldHYeW1kJUKwssknU4TDq+tM+x53polxvvJ
      drf5u522D7sfN3UYNLE4T3wpSTGfYTa+BEhSqRTFXJobN24wt5gASqNJS8nSEyixvIRE3Hkv
      n0kSX0zcsUV6jI+OYDmlX8r5mUkS6dydzxUhiM9OkUjnyCaXWEyUfjlSqTTScxgbHcXxJEjJ
      7NQ46VwRq5BlbGIaIQSzUxOkc0VSywsk0jmk55JOZ/Eci7Gx8dLetNJjamKMbMEmtbzA5Mw8
      QgimV95bXpgjlS0gXZt0Jodj5Rkbn8STJduJ0REKdmmBx9LSEorgznuLczNkCzaeY5HOFshl
      MywmSk8ju5BldGIKCeTSKTwU7EKu9J7nMjk5iSchm07heLC8MLdybqCQTTMxNYuUkpnJcXJF
      m2Ku9J7n2kxOTSMlZNIpPFm6Jqls6UmWSyeYmo3juTajw8MUHe+j9xyLyelZpIR0KoWUpWuS
      LdgApBOLzMwvIoFsahnLhUxyiZn5RRwrz9TMPNJz71zT+Ow0eavUokguzTN/17VXFIXkUpz5
      xQRWIcvM/CKeazM2OobjesxOT1F0Vs5rfJbFRBrPsRgdHb+zp/D9qF/72te+tnG3/EdYVgEp
      NWZnp0il0ihuHssVDI+M09HRQdivsZQq4CPHXEaSW5rF9Ps4/+GHNLe24bmC6ekJUuksdjGL
      EDAyNoVqZRDBCNNTs/i8LEmCLM6MY2oqIxPTNDXWYTsq01NjpLMFspkUhioZnZzDySQwayLM
      zC0j8kvYviizk6MEAkG8/BJ51Y/PMJkcHyZTcMmkllGFy+TMAvnkIv6Aj3jGprA0g17byOTY
      CLFYA4tzE+j+ED6fj/HRG+RsjXRiAYHNzFyC1FKcoClIOCaJ6REiTe2MDt9CcfLcmJijoTaM
      GQgydvMaWc9PankezysQX8hQyC6ztLxEY0MDV68N0dYYYXw2wfzIEP6mTpx8FlFIcGNykVh9
      DTPxJeaGbxCMNTAXXyaxFKexIca1oVs0RExml7NEaiJMTE4Q8AcopBeYmF0mGjaZS2SZvHWD
      2miIuaTNUnyaxoYoQ9dHqTU9liyVWCTIyMQMwYC/9AO3mKDWD/Gsy8jNmzRGNObyJgszYzQ2
      1HH95iQBshSNGiYuv40T7sAQDvNzs6SSaUKqzWJRIRoJMHzzOrYaYnlxjtqwyejkMkpxmaIw
      uHlzmLbWJgoFl9nZaVLJNJosknM1avxwfXgUIxBhYX6OsCGZSdgUk3NIzU9QsxlfyNNU/2Aq
      8018AggSi7M0t3ai6Tp+v4kRiBAJ+RFCMDUzT3trE3bRJhgK4TMNhodHwHNIpPMszk/S1tmD
      rusYhkGwJkrIbyAMk8RCHJ/PpJi3CNeEMQydmrp6gqYOaMzPjNHR3YduGBi6TiTaQMDQUE2T
      xMICpqFTLNqEwyF0TcMpZilqNcSCBjNTE3T3dKMbJrquE401YmoqmmmQSCTRFQXL9ggFA+ia
      inSKFG2JQDIxMUlfTye66UfXdWKNTeiKwDANEukcqvSwXUHQ70NXBeOTM2STCzhSMjI2xcHe
      dgx/yaem5hYUIBIOs7BcegJouoE/WIPn2DQ3lba1dK0cOSVEXVCnJhxCAZoaYyiagSkcllNZ
      wEMzTELBII7tMDU5QU9vH8V8GuGvI+jTqQkHQWg0NkRRzTCqlSaVyYN00Qw/4VAAR0J8fh6f
      YZDPJAnVNpTOfTiAFAaxaAQ1WI/MxMnmLZA2uhkgEvJz6/p1bDSWl5fIJBeJNbaiahrhkA/X
      cRmbjNPb1YwZCKOrKp5j4/MHCQV8CCNIXU0QECSX52hq6UDTdYJ+E8+xmV7I0dkcxR8Moylg
      WxaBYAi/z8RxLGaTDl3Ntavepf8/bH8x/Wy0U0IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit by Markets' width='192'>
      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
      /w8wQQ6npUB2iwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='78' name='Quantity' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='78' name='Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue By Markets' width='192'>
      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
      WZRpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Revenue By Year' width='192'>
      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
      cPeGKt8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales Quantity By Markets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='29' name='Year' width='192'>
      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
      0Lgv/BcmPLW6TXwVugAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
